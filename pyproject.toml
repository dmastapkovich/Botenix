[project]
name = "botenix"
version = "0.1.0"
description = "An asynchronous Python library for seamless Mattermost integration, focusing on simplicity and performance."
readme = "README.md"
authors = [
    { name = "Dmitriy Astapkovich", email = "dm.astapkovich@gmail.com" }
]
requires-python = ">=3.12"
dependencies = [
    "httpx>=0.28.0",
    "orjson>=3.0.0",
    "pydantic>=2.0.0",
    "websockets>=14.0",
]

[project.optional-dependencies]
webhook = [
    "starlette>=0.42.0",
    "uvicorn>=0.34.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pre-commit-hooks>=5.0.0",
    "pre-commit>=4.0.1",
]
lint = [
    "mypy>=1.13.0",
    "ruff>=0.8.3",
]
test = [
    "pytest-cov>=6.0.0",
    "pytest>=8.3.4",
    "pytest-dotenv>=0.5.2",
]
debug = []

[tool.mypy]
plugins = ["pydantic.mypy"]
allow_redefinition = true
strict_optional = true
show_error_codes = true
show_column_numbers = true
warn_no_return = true
disallow_any_unimported = true
strict = true
implicit_reexport = false
warn_unused_ignores = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
fix = true
line-length = 120
preview = true
target-version = "py312"

[tool.ruff.lint]
ignore = [
  "EM",     # A checker for Flake8 that helps format nice error messages
  "FBT",    # A flake8 plugin to detect boolean traps
  "CPY",    # Checks for copyright notices in all python files
  "D",      # pydocstyle is a static analysis tool for checking compliance with Python docstring conventions
]
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S", "PLR2004", "SIM117"]

[tool.ruff.lint.isort]
combine-as-imports = true
lines-after-imports = 2
